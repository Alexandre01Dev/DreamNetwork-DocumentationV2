"use strict";(self.webpackChunkdndocs=self.webpackChunkdndocs||[]).push([[1090],{3905:(e,n,r)=>{r.d(n,{Zo:()=>m,kt:()=>c});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=t.createContext({}),d=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},m=function(e){var n=d(e.components);return t.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},i=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),i=d(r),c=o,v=i["".concat(u,".").concat(c)]||i[c]||p[c]||a;return r?t.createElement(v,l(l({ref:n},m),{},{components:r})):t.createElement(v,l({ref:n},m))}));function c(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=i;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var d=2;d<a;d++)l[d]=r[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}i.displayName="MDXCreateElement"},5723:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var t=r(7462),o=(r(7294),r(3905));const a={sidebar_position:3},l="Commandes",s={unversionedId:"For developpers/Addon/Commands",id:"For developpers/Addon/Commands",title:"Commandes",description:"Vous pouvez cr\xe9er vos propres commandes sur DreamNetwork",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/For developpers/Addon/Commands.mdx",sourceDirName:"For developpers/Addon",slug:"/For developpers/Addon/Commands",permalink:"/DreamNetwork-DocumentationV2/fr/docs/For developpers/Addon/Commands",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/For developpers/Addon/Commands.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"L'\xe9coute des \xe9venements",permalink:"/DreamNetwork-DocumentationV2/fr/docs/For developpers/Addon/Events"}},u={},d=[{value:"Sous-Commandes",id:"sous-commandes",level:3},{value:"Mettre en place un HelpBuilder",id:"mettre-en-place-un-helpbuilder",level:3},{value:"Enregistrement",id:"enregistrement",level:3}],m={toc:d};function p(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"commandes"},"Commandes"),(0,o.kt)("p",null,"Vous pouvez cr\xe9er vos propres commandes sur DreamNetwork"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'Cr\xe9er une classe pour votre commandes et \xe9tendez l\xe0 par la classe "Command" du package be.alexandre01.dreamnetwork')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public class TestCommand extends Command {\n    public TestCommand() {\n        super("hello");\n    }\n}    \n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Pour lire votre commande vous pouvez utiliser")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'@Override\npublic boolean onCommand(String[] args) {\n    if(args.length == 0){\n        System.out.println("World");\n        return true;\n    }\n    return false;\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Le ",(0,o.kt)("strong",{parentName:"p"},"return")," est important, si vous retournez false, pour dreamnetwork, la commande n'existe pas ou est mal utilis\xe9, si un HelpBuilder est mis en place, il sera execut\xe9 pour la commande.")),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Contrairement \xe0 la librairie de Spigot, le premier argument est la commande execut\xe9, dans notre cas test. Donc n'oubliez pas de le prendre en compte ! ")),(0,o.kt)("h3",{id:"sous-commandes"},"Sous-Commandes"),(0,o.kt)("p",null,"Vous pouvez aussi utiliser les Sous-Commandes (SubCommand)"),(0,o.kt)("p",null,'Dans votre constructeur, vous pouvez rajouter la methode "addSubCommands" pour permettre de lire facilement le deuxieme argument tap\xe9 dans la console.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public TestCommand() {\n    super("hello");\n    addSubCommand("Bernard", new SubCommandExecutor() {\n        @Override\n        public boolean onSubCommand(@NonNull String[] args) {\n            System.out.println("Hello Patrick");\n            return true;\n        }\n    });\n}\n')),(0,o.kt)("h3",{id:"mettre-en-place-un-helpbuilder"},"Mettre en place un HelpBuilder"),(0,o.kt)("p",null,"Dans votre constructeur, vous pouvez cr\xe9er et personnaliser les message de help."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public TestCommand() {\n    super("hello");\n    addSubCommand("Bernard", new SubCommandExecutor() {\n        @Override\n        public boolean onSubCommand(@NonNull String[] args) {\n            System.out.println("Hello Patrick");\n            return true;\n        }\n    });\n\n    getHelpBuilder().setTitleUsage("Ceci est une commande de test et de salutation");\n    getHelpBuilder().setCmdUsage("Dire bonjour \xe0 Bernard","bernard");\n}\n')),(0,o.kt)("h3",{id:"enregistrement"},"Enregistrement"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Une fois la classe cr\xe9\xe9e il vous faut l'enregistrer grace \xe0 la DNClientAPI et \xe0 la m\xe9thode getCommandReader")),(0,o.kt)("p",null,"Revenez dans la classe principale\nEt dans le start rajoutez:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"@Override\npublic void start() {\n    // code en haut\n\n    getDnClientAPI().getCommandReader().getCommands().addCommands(new TestCommand());\n}\n")))}p.isMDXComponent=!0}}]);