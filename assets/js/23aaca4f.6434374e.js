"use strict";(self.webpackChunkdndocs=self.webpackChunkdndocs||[]).push([[8420],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),d=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(u.Provider,{value:n},e.children)},i={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(t),c=o,v=m["".concat(u,".").concat(c)]||m[c]||i[c]||a;return t?r.createElement(v,l(l({ref:n},p),{},{components:t})):r.createElement(v,l({ref:n},p))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var d=2;d<a;d++)l[d]=t[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5721:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>i,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:2},l="Events",s={unversionedId:"For developpers/Addon/Events",id:"For developpers/Addon/Events",title:"Events",description:"Vous pouvez cr\xe9er vos propres commandes sur DreamNetwork",source:"@site/docs/For developpers/Addon/Events.mdx",sourceDirName:"For developpers/Addon",slug:"/For developpers/Addon/Events",permalink:"/DreamNetwork-DocumentationV2/docs/For developpers/Addon/Events",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/For developpers/Addon/Events.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"To begin",permalink:"/DreamNetwork-DocumentationV2/docs/For developpers/Addon/get-started"},next:{title:"Commands",permalink:"/DreamNetwork-DocumentationV2/docs/For developpers/Addon/Commands"}},u={},d=[{value:"Sous-Commandes",id:"sous-commandes",level:3},{value:"Mettre en place un HelpBuilder",id:"mettre-en-place-un-helpbuilder",level:3},{value:"Enregistrement",id:"enregistrement",level:3}],p={toc:d};function i(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"events"},"Events"),(0,o.kt)("p",null,"Vous pouvez cr\xe9er vos propres commandes sur DreamNetwork"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'Cr\xe9er une classe pour votre commandes et \xe9tendez l\xe0 par la classe "Command" du package be.alexandre01.dreamnetwork')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public class TestCommand extends Command {\n    public TestCommand() {\n        super("hello");\n    }\n}    \n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Pour lire votre commande vous pouvez utiliser")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'@Override\npublic boolean onCommand(String[] args) {\n    if(args.length == 0){\n        System.out.println("World");\n        return true;\n    }\n    return false;\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Le ",(0,o.kt)("strong",{parentName:"p"},"return")," est important, si vous retournez false, pour dreamnetwork, la commande n'existe pas ou est mal utilis\xe9, si un HelpBuilder est mis en place, il sera execut\xe9 pour la commande.")),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Contrairement \xe0 la librairie de Spigot, le premier argument est la commande execut\xe9, dans notre cas test. Donc n'oubliez pas de le prendre en compte ! ")),(0,o.kt)("h3",{id:"sous-commandes"},"Sous-Commandes"),(0,o.kt)("p",null,"Vous pouvez aussi utiliser les Sous-Commandes (SubCommand)"),(0,o.kt)("p",null,'Dans votre constructeur, vous pouvez rajouter la methode "addSubCommands" pour permettre de lire facilement le deuxieme argument tap\xe9 dans la console.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public TestCommand() {\n    super("hello");\n    addSubCommand("Bernard", new SubCommandExecutor() {\n        @Override\n        public boolean onSubCommand(@NonNull String[] args) {\n            System.out.println("Hello Patrick");\n            return true;\n        }\n    });\n}\n')),(0,o.kt)("h3",{id:"mettre-en-place-un-helpbuilder"},"Mettre en place un HelpBuilder"),(0,o.kt)("p",null,"Dans votre constructeur, vous pouvez cr\xe9er et personnaliser les message de help."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public TestCommand() {\n    super("hello");\n    addSubCommand("Bernard", new SubCommandExecutor() {\n        @Override\n        public boolean onSubCommand(@NonNull String[] args) {\n            System.out.println("Hello Patrick");\n            return true;\n        }\n    });\n\n    getHelpBuilder().setTitleUsage("Ceci est une commande de test et de salutation");\n    getHelpBuilder().setCmdUsage("Dire bonjour \xe0 Bernard","bernard");\n}\n')),(0,o.kt)("h3",{id:"enregistrement"},"Enregistrement"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Une fois la classe cr\xe9\xe9e il vous faut l'enregistrer grace \xe0 la DNClientAPI et \xe0 la m\xe9thode getCommandReader")),(0,o.kt)("p",null,"Revenez dans la classe principale\nEt dans le start rajoutez:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"@Override\npublic void start() {\n    // code en haut\n\n    getDnClientAPI().getCommandReader().getCommands().addCommands(new TestCommand());\n}\n")))}i.isMDXComponent=!0}}]);