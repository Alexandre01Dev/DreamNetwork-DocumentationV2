"use strict";(self.webpackChunkdndocs=self.webpackChunkdndocs||[]).push([[7460],{3089:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=s(5893),r=s(1151);const i={sidebar_position:5},t=void 0,o={id:"For developpers/Addon/Messaging",title:"Messaging",description:"R\xe9cup\xe9rer le client d'un service",source:"@site/docs/For developpers/Addon/Messaging.mdx",sourceDirName:"For developpers/Addon",slug:"/For developpers/Addon/Messaging",permalink:"/DreamNetwork-DocumentationV2/docs/For developpers/Addon/Messaging",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/For developpers/Addon/Messaging.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"R\xe9cup\xe9rer les services",permalink:"/DreamNetwork-DocumentationV2/docs/For developpers/Addon/GetServices"},next:{title:"PacketHandling",permalink:"/DreamNetwork-DocumentationV2/docs/For developpers/Addon/PacketHandling"}},l={},c=[{value:"R\xe9cup\xe9rer le client d&#39;un service",id:"r\xe9cup\xe9rer-le-client-dun-service",level:2},{value:"Comprendre le syst\xe8me de messaging",id:"comprendre-le-syst\xe8me-de-messaging",level:2},{value:"Envoyer un message \xe0 un service",id:"envoyer-un-message-\xe0-un-service",level:2},{value:"M\xe9thode 1 : Envoyer un message via le client",id:"m\xe9thode-1--envoyer-un-message-via-le-client",level:3},{value:"M\xe9thode 2 : Envoyer un message en convertissant le message en packet",id:"m\xe9thode-2--envoyer-un-message-en-convertissant-le-message-en-packet",level:3},{value:"Plus avanc\xe9",id:"plus-avanc\xe9",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",div:"div",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"r\xe9cup\xe9rer-le-client-dun-service",children:"R\xe9cup\xe9rer le client d'un service"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    AServiceClient client = lobby.getClient();\n    v\xe9rifier si le client est connect\xe9\n    if(client != null) {\n        // le client est connect\xe9\n    } else {\n        // le client n'est pas connect\xe9\n    }\n"})}),"\n",(0,a.jsx)(n.h2,{id:"comprendre-le-syst\xe8me-de-messaging",children:"Comprendre le syst\xe8me de messaging"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"Le syst\xe8me de messaging est un syst\xe8me qui permet d'envoyer des donn\xe9es \xe0 un service et de pouvoir les r\xe9cup\xe9rer dans le service en question\nA savoir que le syst\xe8me de messaging est bas\xe9 en JSON et qu'il peut \xeatre utile pour convertir des objets en JSON et vice versa"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Voici un exemple de comment on pourrait cr\xe9e un Message"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'    Message message = new Message("Mon titre de message");\n    message.set("ma cl\xe9", "ma valeur");\n    message.set("mon object", new MyObject());\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"Dans le syst\xe8me de message il existe 2 syst\xe8mes de conversions, un qui est automatique et un autre qui est manuel et pr\xe9d\xe9fini.\nLe syst\xe8me de conversion automatique est bas\xe9 sur la librairie Gson et Jackson et permet de convertir automatiquement des objets en JSON et vice versa\nLe syst\xe8me de conversion manuel est bas\xe9 sur le syst\xe8me de message et permet de convertir manuellement des valeurs en une autre valeur pour pouvoir les identifier pour plus tard"})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Lorsque vous utilisez le syst\xe8me de conversion automatique, il est important de savoir que les objets doivent \xeatre s\xe9rialisable et doivent avoir un constructeur vide"})}),"\n",(0,a.jsx)(n.p,{children:"Bon exemple d'objet"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"@NoArgsConstructor\n@AllArgsConstructor\npublic class MyObject implements Serializable {\n    private String name;\n    private int age;\n    private String[] friends;\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Mauvais exemple d'objet"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class MyObject {\n    private String name;\n    private int age;\n    private String[] friends;\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Si vous souhaitez ignorer un attribut d'un objet, vous pouvez utiliser l'annotation @JsonIgnore"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"@NoArgsConstructor\n@AllArgsConstructor\npublic class MyObject implements Serializable {\n    private String name;\n    private int age;\n    @JsonIgnore\n    private String[] friends;\n}\n"})}),"\n",(0,a.jsx)(n.div,{children:(0,a.jsx)(n.p,{children:"Essayez d'\xe9viterez de faire des objets trop complexes car cela peut poser des probl\xe8mes de conversion, comme un objet qui \xe9tends une autre classe ou qui impl\xe9mente une interface"})}),"\n",(0,a.jsx)(n.p,{children:"Mais si dans le cas o\xf9 vous souhaitez r\xe9ellement faire un objet complexe, vous pouvez utiliser cette methode lorsque vous cr\xe9ez votre message\nimaginez que vous voulez envoyer uniquement les donn\xe9es de l'objet enfant et non de l'objet parent"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    public class Parent {\n        private String name;\n        private int age;\n        private String[] friends;\n    }\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    public class Child extends Parent {\n        private String school;\n    }\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'    Message message = new Message("Mon titre de message");\n    message.set("mon object", new Child(), Child.class);\n'})}),"\n",(0,a.jsx)(n.h2,{id:"envoyer-un-message-\xe0-un-service",children:"Envoyer un message \xe0 un service"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Il existe plusieurs fa\xe7ons d'envoyer un message \xe0 un service"}),"\n",(0,a.jsx)(n.h3,{id:"m\xe9thode-1--envoyer-un-message-via-le-client",children:"M\xe9thode 1 : Envoyer un message via le client"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    lobby.getClient().writeAndFlush(message); // return Packet\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.h3,{id:"m\xe9thode-2--envoyer-un-message-en-convertissant-le-message-en-packet",children:"M\xe9thode 2 : Envoyer un message en convertissant le message en packet"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    message.toPacket(lobby.getClient()).dispatch();\n"})}),"\n",(0,a.jsx)(n.p,{children:"Vous pouvez toujours savoir si le message a bien \xe9t\xe9 envoy\xe9 ou non via son GenericFutureListener"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    message.toPacket(lobby.getClient()).dispatch(future -> {\n        if(future.isSuccess()) {\n            // le message a bien \xe9t\xe9 envoy\xe9\n        } else {\n            // le message n'a pas \xe9t\xe9 envoy\xe9\n        }\n    });\n"})}),"\n",(0,a.jsx)(n.h3,{id:"plus-avanc\xe9",children:"Plus avanc\xe9"}),"\n",(0,a.jsx)(n.p,{children:"Utilisation d'un syst\xe8me de callback"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    message.toPacket(lobby.getClient()).dispatch(future -> {\n        if(future.isSuccess()) {\n            // le message a bien \xe9t\xe9 envoy\xe9\n        } else {\n            // le message n'a pas \xe9t\xe9 envoy\xe9\n        }\n    }, new TaskHandler() {\n        @Override\n        public void onCallback() {\n            // r\xe9cup\xe9ration de la reponse en message via getResponse();\n        }\n    });\n"})}),"\n",(0,a.jsx)(n.p,{children:"Ou via DNCallback"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    DNCallback.single(message.toPacket(lobby.getClient()), new TaskHandler() {\n        @Override\n        public void onCallback() {\n        }\n    });\n"})}),"\n",(0,a.jsx)(n.p,{children:"Dans TaskHandler vous pouvez utiliser diff\xe9rentes impl\xe9mentations"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    new TaskHandler() {\n        @Override\n        public void onCallback() {\n        }\n    }\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"    new TaskHandler() {\n        @Override\n        public void onAccepted() {\n        }\n\n        @Override\n        public void onRejected() {\n        }\n\n        @Override\n        public void onTimeout() {\n        }\n\n        @Override\n        public void onFailed() {\n        }\n\n        @Override\n        public void onCustom(String custom) {\n        }\n    }\n"})}),"\n",(0,a.jsx)(n.p,{children:"Lorsque vous recevez un message avec un callback vous pouvez renvoyer une reponse voici un exemple"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'message.getCallback().ifPresent(callback -> {\n    callback.send(TaskType.ACCEPTED);\n\n    // ou\n    callback.send("custom");\n\n    // ou encore vous pouvez int\xe9grer un message dans la r\xe9ponse\n    callback.mergeAndSend(new Message("Mon titre de message"), TaskType.ACCEPTED);\n});\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nous allons maintenant voir comment recevoir un message qu'un service nous envoie.\nSi vous voulez savoir comment recevoir le message depuis un service vous pouvez vous rendre sur la page ",(0,a.jsx)(n.a,{href:"/fr/Recevoir%20un%20message/",children:"Recevoir un message"})]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>t});var a=s(7294);const r={},i=a.createContext(r);function t(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);